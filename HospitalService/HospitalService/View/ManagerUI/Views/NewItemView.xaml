<Page x:Class="HospitalService.View.ManagerUI.Views.NewItemView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:HospitalService.View.ManagerUI.Views"
      xmlns:conv="clr-namespace:HospitalService.View.ManagerUI.Converters"
      xmlns:validation="clr-namespace:HospitalService.View.ManagerUI.Validations"
      xmlns:System="clr-namespace:System;assembly=mscorlib"
      xmlns:model="clr-namespace:Model" xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      mc:Ignorable="d" 
      d:DesignHeight="718" d:DesignWidth="969"
      Title="NewItem">

    <Page.Resources>
        <ResourceDictionary>
            <conv:InventoryTypeConverter x:Key="invConverter"/>
            <ObjectDataProvider x:Key="dataFromEnum" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="model:Equipment"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Indigo.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Indigo.xaml" />
                <ResourceDictionary Source="Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Page.Resources>

    <Grid Background="#f5f5f5">
        <Border HorizontalAlignment="Center" Height="442" VerticalAlignment="Top" Width="398"
                CornerRadius="10" BorderThickness="0.5" BorderBrush="Black" Margin="0,168,0,0"/>

        <Label x:Name="id" Content="ID" HorizontalAlignment="Left" Margin="332,219,0,0" VerticalAlignment="Top" Width="130" 
               Height="34"/>
        <Label x:Name="name" Content="Naziv" HorizontalAlignment="Left" Margin="332,278,0,0" VerticalAlignment="Top" Width="130" 
               Height="34"/>
        <Label x:Name="kolicina" Content="Količina" HorizontalAlignment="Left" Margin="332,336,0,0" VerticalAlignment="Top" Width="130" 
               Height="34"/>
        <Label x:Name="type" Content="Vrsta" HorizontalAlignment="Left" Margin="332,400,0,0" VerticalAlignment="Top" Width="130" 
               Height="34"/>
        <Label x:Name="supplier" Content="Proizvođač" HorizontalAlignment="Left" Margin="332,461,0,0" VerticalAlignment="Top" Width="130" 
               Height="34"/>
        <TextBox x:Name="IDBox" HorizontalAlignment="Left" Height="34" Margin="467,219,0,0" TextWrapping="Wrap" VerticalAlignment="Top" 
                 Width="179" IsEnabled="False" Text="{Binding ItemId}"
                 Foreground="#474746"
                 FontFamily="Roboto"
                 FontWeight="Light"
                 FontSize="14"
                 HorizontalContentAlignment="Center"/>

        <TextBox x:Name="NameBox" HorizontalAlignment="Left" Height="34" Margin="467,278,0,0" TextWrapping="Wrap"
                 materialDesign:HintAssist.Hint="stolica, krevet, stetoskop..."
                 materialDesign:HintAssist.HintOpacity=".26"
                 VerticalAlignment="Top" Width="179"
                 Foreground="#474746"
                 FontFamily="Roboto"
                 FontWeight="Light"
                 FontSize="14"
                 HorizontalContentAlignment="Center">
            <TextBox.Text>
                <Binding Path="ItemName" Mode="TwoWay" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validation:ItemNameValidation ValidationStep="RawProposedValue"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <StackPanel>
                        <AdornedElementPlaceholder x:Name="textBox"/>
                        <TextBlock Text="{Binding [0].ErrorContent}" Foreground="#FFE52020"/>
                    </StackPanel>
                </ControlTemplate>
            </Validation.ErrorTemplate>
        </TextBox>

        <ComboBox x:Name="comboBox" ItemsSource="{Binding Source={StaticResource dataFromEnum}}"
                  HorizontalAlignment="Left" Height="34" Margin="467,395,0,0" VerticalAlignment="Top" Width="179"
                  SelectedItem="{Binding Type}" Foreground="#474746"
                  FontFamily="Roboto"
                  FontWeight="Light"
                  FontSize="14"
                  HorizontalContentAlignment="Center">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Converter={StaticResource invConverter}}"/>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>
        <Button x:Name="save" Content="Potvrdi" HorizontalAlignment="Left" Margin="378,548,0,0" VerticalAlignment="Top" 
                Height="34" Width="96" Command="{Binding ConfirmCommand}">
            <Button.Style>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="IsEnabled" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=IDBox, Path=Text}" Value="">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=IDBox, Path=(Validation.HasError)}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=NameBox, Path=Text}" Value="">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=NameBox, Path=(Validation.HasError)}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=QuantityBox, Path=Text}" Value="">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=QuantityBox, Path=(Validation.HasError)}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=suppBox, Path=Text}" Value="">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=suppBox, Path=(Validation.HasError)}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=comboBox, Path=SelectedIndex}" Value="-1">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="cancel" Content="Otkaži" HorizontalAlignment="Left" Margin="502,548,0,0" VerticalAlignment="Top" 
                Height="34" Width="92" Command="{Binding CancelCommand}"/>
        <TextBox x:Name="QuantityBox" HorizontalAlignment="Left" Height="34" Margin="467,339,0,0" TextWrapping="Wrap" 
                 materialDesign:HintAssist.Hint="celi brojevi..."
                 materialDesign:HintAssist.HintOpacity=".26"
                 VerticalAlignment="Top" Width="179"
                 Foreground="#474746"
                 FontFamily="Roboto"
                 FontWeight="Light"
                 FontSize="14"
                 HorizontalContentAlignment="Center">
            <TextBox.Text>
                <Binding Path="Quantity" Mode="TwoWay" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validation:QuantityValidation ValidationStep="ConvertedProposedValue" Min="1"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <StackPanel>
                        <AdornedElementPlaceholder x:Name="textBox"/>
                        <TextBlock Text="{Binding [0].ErrorContent}" Foreground="#FFE52020"/>
                    </StackPanel>
                </ControlTemplate>
            </Validation.ErrorTemplate>
        </TextBox>

        <TextBox x:Name="suppBox" HorizontalAlignment="Left" Height="34" Margin="467,454,0,0" TextWrapping="Wrap" 
                 materialDesign:HintAssist.Hint="galenika, ikea..."
                 materialDesign:HintAssist.HintOpacity=".26"
                 VerticalAlignment="Top" Width="179"
                 Foreground="#474746"
                 FontFamily="Roboto"
                 FontWeight="Light"
                 FontSize="14"
                 HorizontalContentAlignment="Center">
            <TextBox.Text>
                <Binding Path="Supplier" Mode="TwoWay" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validation:ItemNameValidation ValidationStep="RawProposedValue"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <StackPanel>
                        <AdornedElementPlaceholder x:Name="textBox"/>
                        <TextBlock Text="{Binding [0].ErrorContent}" Foreground="#FFE52020"/>
                    </StackPanel>
                </ControlTemplate>
            </Validation.ErrorTemplate>
        </TextBox>

        <TextBlock x:Name="textBlock" HorizontalAlignment="Left" Margin="332,92,0,0" Text="Dodaj stavku" TextWrapping="Wrap" VerticalAlignment="Top" Height="57" Width="302" FontFamily="Roboto" FontSize="36" FontStyle="Italic" TextAlignment="Center"/>
        <Frame x:Name="newFrame" NavigationUIVisibility="Hidden"/>
    </Grid>
</Page>
