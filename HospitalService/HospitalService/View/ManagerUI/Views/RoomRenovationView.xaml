<Page x:Class="HospitalService.View.ManagerUI.Views.RoomRenovationView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:HospitalService.View.ManagerUI.Views"
      xmlns:conv="clr-namespace:HospitalService.View.ManagerUI.Converters"
      xmlns:sys="clr-namespace:System;assembly=mscorlib"
      xmlns:validation="clr-namespace:HospitalService.View.ManagerUI.Validations"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:model="clr-namespace:Model"
      mc:Ignorable="d" 
      d:DesignHeight="718" d:DesignWidth="969"
      Title="RoomRenovation">

    <Page.Resources>
        <ResourceDictionary>
            <conv:DaysOfTheWeekConverter x:Key="enumConverter"/>
            <conv:EnumValueConverter x:Key="comboConvert"/>
            <ObjectDataProvider x:Key="dataFromEnum" MethodName="GetValues"
                            ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="model:RoomType"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Indigo.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Indigo.xaml" />
                <ResourceDictionary Source="Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Page.Resources>

    <Grid Background="#f5f5f5">
        <DataGrid x:Name="tableBinding" IsReadOnly="True" ItemsSource="{Binding Appointments}"
                  SelectionMode="Single" AutoGenerateColumns="False" HorizontalAlignment="Left" 
                  Height="546" VerticalAlignment="Top" Width="476" FontFamily="Roboto" FontSize="14"
                  SelectionUnit="FullRow" BorderThickness="2" BorderBrush="Gray" Background="#f5f5f5"
                  Margin="42,90,0,0">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Datum" Binding="{Binding Start, StringFormat=dd.MM.yyyy.}" Width="*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Height" Value="25"/>
                            <Setter Property="Padding" Value="4"/>
                            <Setter Property="TextAlignment" Value="Center"/>
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="Foreground" Value="#474746"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Dan" Width="*"  Binding="{Binding Start.DayOfWeek, Converter={StaticResource enumConverter}}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Height" Value="25"/>
                            <Setter Property="Padding" Value="4"/>
                            <Setter Property="TextAlignment" Value="Center"/>
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="Foreground" Value="#474746"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Vrsta" Width="*"  Binding="{Binding Type}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Height" Value="25"/>
                            <Setter Property="Padding" Value="4"/>
                            <Setter Property="TextAlignment" Value="Center"/>
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="Foreground" Value="#474746"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>


        <Border Height="546" VerticalAlignment="Top" Margin="536,90,36,0"
                CornerRadius="10" BorderThickness="0.5" BorderBrush="Black"/>
        <TextBlock x:Name="textBlock" HorizontalAlignment="Left" Margin="42,28,0,0" 
                   Text="Zakazani termini" TextWrapping="Wrap" VerticalAlignment="Top"
                   Height="57" Width="302" FontFamily="Roboto" FontSize="36" FontStyle="Italic" 
                   TextAlignment="Center" Foreground="#474746"/>

        <StackPanel Orientation="Vertical" Margin="572,112,73,137">
            <StackPanel Orientation="Horizontal" Height="149" Width="322">
                <StackPanel Orientation="Vertical" Width="123">
                    <Label x:Name="id" Content="Soba" HorizontalAlignment="Left" VerticalAlignment="Top" 
               Width="112" Height="35"/>
                    <Separator Opacity="0" Height="5"/>
                    <Label x:Name="start" Content="Početak" HorizontalAlignment="Left" VerticalAlignment="Top" 
               Width="112" Height="34"/>
                    <Separator Opacity="0" Height="5"/>
                    <Label x:Name="end" Content="Kraj" HorizontalAlignment="Left" VerticalAlignment="Top" 
               Width="112" Height="34"/>
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="18,0,0,0" Width="180">
                    <TextBox x:Name="IDBox" IsEnabled="False" HorizontalAlignment="Left"
                             Height="30" Width="180"
                             Foreground="#474746"
                             FontFamily="Roboto"
                             FontWeight="Light"
                             FontSize="14"
                             TextWrapping="Wrap"
                             HorizontalContentAlignment="Center"
                             Text="{Binding SelectedRoom.Name}"/>
                    <Separator Opacity="0" Height="10"/>
                    <DatePicker x:Name="startPicker" HorizontalAlignment="Left" Width="180"
                                DisplayDateStart="{x:Static sys:DateTime.Today}" SelectedDate="{Binding Start}" VerticalAlignment="Top"
                                FontFamily="Roboto"
                                FontSize="14"
                                FontWeight="Light"
                                HorizontalContentAlignment="Center"/>
                    <Separator Opacity="0" Height="10"/>
                    <DatePicker x:Name="endPicker" HorizontalAlignment="Left" Width="180"
                                DisplayDateStart="{x:Static sys:DateTime.Today}" SelectedDate="{Binding End}"
                                VerticalAlignment="Top"
                                FontFamily="Roboto"
                                FontSize="14"
                                FontWeight="Light"
                                HorizontalContentAlignment="Center"/>
                    <TextBlock Text="{Binding ValidationMessage, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                               Foreground="#FFE52020" TextWrapping="Wrap">
                    </TextBlock>
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Height="54">
                <StackPanel Orientation="Vertical">
                    <Label Content="Vrsta" Width="112" Height="35"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Width="232" Margin="0,10,0,0">
                    <RadioButton Content="Podeli sobu" IsChecked="True"/>
                    <Separator Opacity="0" Width="15"/>
                    <RadioButton Content="Spajanje soba" IsChecked="{Binding IsChecked}"/>
                </StackPanel>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Height="273" Width="322" >
                <StackPanel Orientation="Vertical" Width="136">
                    <Label x:Name="newId" Content="Novi broj sobe" HorizontalAlignment="Left" 
                       Width="126" Height="34"/>
                    <Separator Opacity="0" Height="15"/>
                    <Label x:Name="newName" Content="Novo ime" HorizontalAlignment="Left" VerticalAlignment="Top" 
                       Width="112" Height="34"/>
                    <Separator Opacity="0" Height="15"/>
                    <Label x:Name="roomtype" Content="Nova vrsta" HorizontalAlignment="Left" VerticalAlignment="Top" 
                       Width="112" Height="34"/>
                    <Separator Opacity="0" Height="15"/>
                    <Label x:Name="newSize" Content="Nova veličina" HorizontalAlignment="Left" VerticalAlignment="Top" 
                       Width="112" Height="34"/>
                    <Separator Opacity="0" Height="15"/>
                    <Label x:Name="merge" Content="Soba za spajanje" HorizontalAlignment="Left" 
                       Width="126" Height="34"/>
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="5,0,0,0">
                    <TextBox x:Name="NewIDBox" HorizontalAlignment="Left"
                             Height="30" Width="180" VerticalAlignment="Top"
                             Foreground="#474746"
                             FontFamily="Roboto"
                             FontWeight="Light"
                             FontSize="14"
                             TextWrapping="Wrap"
                             HorizontalContentAlignment="Center">
                        <TextBox.Text>
                            <Binding Path="NewID" Mode="TwoWay" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validation:RoomNumberValidation ValidationStep="RawProposedValue"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <StackPanel>
                                    <AdornedElementPlaceholder x:Name="textBox"/>
                                    <TextBlock Text="{Binding [0].ErrorContent}" Foreground="#FFE52020" ToolTip="Pravilan format: 101a, 202, 303, 400b, itd."/>
                                </StackPanel>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    </TextBox>
                    <Separator Opacity="0" Height="15"/>
                    <TextBox x:Name="NewNameBox" HorizontalAlignment="Left"
                             Height="30" Width="180" VerticalAlignment="Top"
                             Foreground="#474746"
                             FontFamily="Roboto"
                             FontWeight="Light"
                             FontSize="14"
                             TextWrapping="Wrap"
                             HorizontalContentAlignment="Center">
                        <TextBox.Text>
                            <Binding Path="NewName" Mode="TwoWay" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validation:NameValidation ValidationStep="RawProposedValue"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <StackPanel>
                                    <AdornedElementPlaceholder x:Name="textBox"/>
                                    <TextBlock Text="{Binding [0].ErrorContent}" Foreground="#FFE52020" ToolTip="Pravilan format: Soba 1, Operaciona sala"/>
                                </StackPanel>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    </TextBox>
                    <Separator Opacity="0" Height="15"/>
                    <ComboBox x:Name="TypeBox" IsEnabled="True" HorizontalAlignment="Left"
                              Height="30" Width="180" VerticalAlignment="Top" ItemsSource="{Binding Source={StaticResource dataFromEnum}}"
                              SelectedItem="{Binding NewType}"
                              Foreground="#474746"
                              FontFamily="Roboto"
                              FontWeight="Light"
                              FontSize="14"
                              HorizontalContentAlignment="Center">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource comboConvert}}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Separator Opacity="0" Height="20"/>
                    <TextBox x:Name="NewSizeBox" HorizontalAlignment="Left"
                             Height="30" Width="180" VerticalAlignment="Top"
                             Foreground="#474746"
                             FontFamily="Roboto"
                             FontWeight="Light"
                             FontSize="14"
                             TextWrapping="Wrap"
                             HorizontalContentAlignment="Center">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                        <TextBox.Resources>
                            <validation:MaxSizeProxy x:Key="proxy" Data="{Binding}"/>
                        </TextBox.Resources>
                        <TextBox.Text>
                            <Binding Path="NewSize" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validation:RoomRenovationValidation ValidationStep="RawProposedValue">
                                        <validation:RoomRenovationValidation.Wrapper>
                                            <validation:MaxSizeWrapper Max ="{Binding Path=Data.SelectedRoom.Size, Source={StaticResource proxy}}"/>
                                        </validation:RoomRenovationValidation.Wrapper>
                                    </validation:RoomRenovationValidation>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <StackPanel>
                                    <AdornedElementPlaceholder x:Name="textBox"/>
                                    <TextBlock Text="{Binding [0].ErrorContent}" Foreground="#FFE52020" />
                                </StackPanel>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    </TextBox>
                    <Separator Opacity="0" Height="15"/>
                    <ComboBox x:Name="SecondRoomBox" HorizontalAlignment="Left"
                              Height="30" Width="180" VerticalAlignment="Top" ItemsSource="{Binding Rooms}"
                              SelectedItem="{Binding SecondRoom}"
                              Foreground="#474746"
                              FontFamily="Roboto"
                              FontWeight="Light"
                              FontSize="14"
                              HorizontalContentAlignment="Center">
                        <ComboBox.Style>
                            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked}" Value="False">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBox.Style>
                    </ComboBox>
                </StackPanel>
            </StackPanel>
        </StackPanel>

        <Button x:Name="save" Content="Potvrdi" HorizontalAlignment="Left" Margin="646,590,0,0" VerticalAlignment="Top" Height="30" Width="80"
                    Command="{Binding ConfirmCommand}">
            <Button.Style>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="IsEnabled" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=NewIDBox, Path=Text}" Value="">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=NewIDBox, Path=(Validation.HasError)}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=NewNameBox, Path=Text}" Value="">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=NewNameBox, Path=(Validation.HasError)}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=NewSizeBox, Path=Text}" Value="">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=NewSizeBox, Path=(Validation.HasError)}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=SecondRoomBox, Path=IsEnabled}" Value="True"/>
                                <Condition Binding="{Binding ElementName=SecondRoomBox, Path=SelectedIndex}" Value="-1"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="False"/>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button x:Name="cancel" Content="Otkaži" HorizontalAlignment="Left" Margin="740,590,0,0" VerticalAlignment="Top" Height="30" Width="82" 
                    Command="{Binding CancelCommand}"/>

        <Frame x:Name="newFrame" NavigationUIVisibility="Hidden"/>
        <Popup x:Name="pp" Placement="Center" IsOpen="{Binding IsPopupOpen}" Width="400" Height="200" AllowsTransparency="True">
            <local:Message />
        </Popup>
    </Grid>
</Page>

