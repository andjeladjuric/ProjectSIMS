<Page x:Class="HospitalService.View.ManagerUI.Views.EditProfileView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:HospitalService.View.ManagerUI.Views" 
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:validation="clr-namespace:HospitalService.View.ManagerUI.Validations"
      mc:Ignorable="d" 
      d:DesignHeight="718" d:DesignWidth="969"
      Title="ProfileView">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Indigo.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Indigo.xaml" />
                <ResourceDictionary Source="Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Page.Resources>

    <Grid Background="#f5f5f5">
        <materialDesign:PackIcon Kind="UserCircle" Height="118" Width="118" Foreground="#CEDDCA" Margin="580,83,0,0"/>
        <Border HorizontalAlignment="Center" Height="372" VerticalAlignment="Top" Width="426"
                CornerRadius="10" BorderThickness="0.5" BorderBrush="Black" Margin="0,198,0,0"/>
        <Button Height="35" Content="Potvrdi" Margin="376,514,501,169" Command="{Binding ConfirmCommand}">
            <Button.Style>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="IsEnabled" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=addressBox, Path=Text}" Value="">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=addressBox, Path=(Validation.HasError)}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=phoneBox, Path=Text}" Value="">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=phoneBox, Path=(Validation.HasError)}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=mailBox, Path=Text}" Value="">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=mailBox, Path=(Validation.HasError)}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Height="35" Content="Otkaži" Margin="494,514,385,169" Command="{Binding CancelCommand}"/>
        <TextBlock x:Name="textBlock" HorizontalAlignment="Center" Margin="0,135,0,0" Text="{Binding Name}" TextWrapping="Wrap" 
                   VerticalAlignment="Top" Height="56" Width="322" FontFamily="Roboto" FontSize="40" FontStyle="Italic" 
                   TextAlignment="Center"/>

        <StackPanel Orientation="Horizontal" Margin="293,236,289,208">
            <StackPanel Orientation="Vertical">
                <Separator Opacity="0" Height="10"/>
                <Label x:Name="jmbg" Content="JMBG" HorizontalAlignment="Left" VerticalAlignment="Top" 
               Width="140" Height="36"/>
                <Separator Opacity="0" Height="10"/>
                <Label x:Name="birthday" Content="Datum rođenja" HorizontalAlignment="Left" VerticalAlignment="Top" 
               Width="140" Height="36"/>
                <Separator Opacity="0" Height="10"/>
                <Label x:Name="address" Content="Adresa stanovanja" HorizontalAlignment="Left" VerticalAlignment="Top" 
               Width="140" Height="36"/>
                <Separator Opacity="0" Height="10"/>
                <Label x:Name="phone" Content="Broj telefona" HorizontalAlignment="Left" VerticalAlignment="Top" 
               Width="140" Height="36"/>
                <Separator Opacity="0" Height="10"/>
                <Label x:Name="mail" Content="E-mail" HorizontalAlignment="Left" VerticalAlignment="Top" 
               Width="140" Height="36"/>
            </StackPanel>
            <StackPanel Orientation="Vertical" Margin="25,0,0,0">
                <TextBox x:Name="jmbgBox" HorizontalAlignment="Left" Height="36"
                 VerticalAlignment="Top" Width="200" IsEnabled="False"
                 Foreground="#474746"
                 FontFamily="Roboto"
                 FontWeight="Light"
                 FontSize="14"
                 TextWrapping="Wrap" Text="{Binding Manager.Jmbg}"
                 HorizontalContentAlignment="Center"/>
                <Separator Opacity="0" Height="10"/>
                <TextBox x:Name="birthdayBox" HorizontalAlignment="Left" Height="36"
                 VerticalAlignment="Top" Width="200" IsEnabled="False"
                 Foreground="#474746"
                 FontFamily="Roboto"
                 FontWeight="Light"
                 FontSize="14"
                 TextWrapping="Wrap" Text="{Binding Manager.DateOfBirth, StringFormat=dd.MM.yyyy}"
                 HorizontalContentAlignment="Center"/>
                <Separator Opacity="0" Height="10"/>
                <TextBox x:Name="addressBox" HorizontalAlignment="Left" Height="36"
                 VerticalAlignment="Top" Width="200"
                 Foreground="#474746"
                 FontFamily="Roboto"
                 FontWeight="Light"
                 FontSize="14"
                 TextWrapping="Wrap"
                 HorizontalContentAlignment="Center">
                    <TextBox.Text>
                        <Binding Path="Address" Mode="TwoWay" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:ProfileValidation ValidationStep="RawProposedValue"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                    <Validation.ErrorTemplate>
                        <ControlTemplate>
                            <StackPanel>
                                <AdornedElementPlaceholder x:Name="textBox"/>
                                <TextBlock Text="{Binding [0].ErrorContent}" Foreground="#FFE52020"/>
                            </StackPanel>
                        </ControlTemplate>
                    </Validation.ErrorTemplate>
                </TextBox>
                <Separator Opacity="0" Height="10"/>
                <TextBox x:Name="phoneBox" HorizontalAlignment="Left" Height="36"
                 VerticalAlignment="Top" Width="200"
                 Foreground="#474746"
                 FontFamily="Roboto"
                 FontWeight="Light"
                 FontSize="14"
                 TextWrapping="Wrap"
                 HorizontalContentAlignment="Center">
                    <TextBox.Text>
                        <Binding Path="Phone" Mode="TwoWay" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:PhoneValidation ValidationStep="RawProposedValue"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                    <Validation.ErrorTemplate>
                        <ControlTemplate>
                            <StackPanel>
                                <AdornedElementPlaceholder x:Name="textBox"/>
                                <TextBlock Text="{Binding [0].ErrorContent}" Foreground="#FFE52020"/>
                            </StackPanel>
                        </ControlTemplate>
                    </Validation.ErrorTemplate>
                </TextBox>
                <Separator Opacity="0" Height="10"/>
                <TextBox x:Name="mailBox" HorizontalAlignment="Left" Height="36"
                 VerticalAlignment="Top" Width="200"
                 Foreground="#474746"
                 FontFamily="Roboto"
                 FontWeight="Light"
                 FontSize="14"
                 TextWrapping="Wrap"
                 HorizontalContentAlignment="Center">
                    <TextBox.Text>
                        <Binding Path="Mail" Mode="TwoWay" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:EmailValidation ValidationStep="RawProposedValue"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                    <Validation.ErrorTemplate>
                        <ControlTemplate>
                            <StackPanel>
                                <AdornedElementPlaceholder x:Name="textBox"/>
                                <TextBlock Text="{Binding [0].ErrorContent}" Foreground="#FFE52020"/>
                            </StackPanel>
                        </ControlTemplate>
                    </Validation.ErrorTemplate>
                </TextBox>
                <Separator Opacity="0" Height="10"/>
            </StackPanel>
        </StackPanel>

        <Frame x:Name="newFrame" NavigationUIVisibility="Hidden"/>
    </Grid>
</Page>
