<Page x:Class="HospitalService.View.ManagerUI.EditInventory"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:HospitalService.View.ManagerUI"
      xmlns:validation="clr-namespace:HospitalService.View.ManagerUI.Validations"
      xmlns:System="clr-namespace:System;assembly=mscorlib"
      xmlns:model="clr-namespace:Model"
      mc:Ignorable="d" 
      d:DesignHeight="718" d:DesignWidth="969"
      Title="EditInventory">

    <Page.Resources>
        <ResourceDictionary>
            <local:InventoryTypeConverter x:Key="invConverter"/>
            <ObjectDataProvider x:Key="dataFromEnum" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="model:Equipment"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Indigo.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Indigo.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Page.Resources>

    <Grid Background="#f5f5f5">
        <DataGrid x:Name="tableBinding" IsReadOnly="True" ItemsSource="{Binding invList}" SelectedItem="{Binding item, Mode=TwoWay}"
                  SelectionMode="Single" AutoGenerateColumns="False" HorizontalAlignment="Left" 
                  Height="450" VerticalAlignment="Center" Width="566" FontFamily="Gill Sans MT" FontSize="14" Margin="19,0,0,0"
                  SelectionUnit="FullRow" BorderThickness="2" BorderBrush="Gray" Background="#f5f5f5">
            <DataGrid.Resources>
                <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="#dadfe3"/>
                    <Setter Property="Foreground" Value="#5b7886"/>
                    <Setter Property="Height" Value="34"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>

                <Style TargetType="{x:Type DataGridCell}">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#e0e0e0" />
                            <Setter Property="BorderThickness" Value="0"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>

            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Šifra" Binding="{Binding Id}" Width="*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="Foreground" Value="#5b7886"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Naziv" Width="*"  Binding="{Binding Name}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="Foreground" Value="#5b7886"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Vrsta" Width="*"  Binding="{Binding EquipmentType, Converter={StaticResource invConverter}}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="Foreground" Value="#5b7886"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Količina" Width="*"  Binding="{Binding Quantity}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="Foreground" Value="#5b7886"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Proizvođač" Width="*"  Binding="{Binding Supplier}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="Foreground" Value="#5b7886"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>

        <Grid x:Name="EditGrid" Margin="590,101,0,105">
            <Rectangle HorizontalAlignment="Left" Height="447" Stroke="Black" VerticalAlignment="Top" Width="350" Margin="12,35,0,0"/>

            <Label x:Name="id" Content="ID" HorizontalAlignment="Left" Margin="42,121,0,0" VerticalAlignment="Top" Width="122" Foreground="#FF5B7886" FontFamily="Gill Sans MT" FontWeight="Bold" FontSize="14" Height="36"/>
            <Label x:Name="name" Content="Naziv" HorizontalAlignment="Left" Margin="42,183,0,0" VerticalAlignment="Top" Width="122" FontFamily="Gill Sans MT" FontWeight="Bold" FontStyle="Normal" FontSize="14" Foreground="#FF5B7886" Height="36"/>
            <Label x:Name="kolicina" Content="Količina" HorizontalAlignment="Left" Margin="42,245,0,0" VerticalAlignment="Top" Width="122" FontFamily="Gill Sans MT" FontWeight="Bold" FontStyle="Normal" FontSize="14" Foreground="#FF5B7886" Height="36"/>
            <Label x:Name="type" Content="Vrsta" HorizontalAlignment="Left" Margin="42,312,0,0" VerticalAlignment="Top" Width="122" Foreground="#FF5B7886" FontFamily="Gill Sans MT" FontSize="14" FontWeight="Bold" Height="35"/>
            <Label x:Name="supplier" Content="Proizvođač" HorizontalAlignment="Left" Margin="42,376,0,0" VerticalAlignment="Top" Width="122" Foreground="#FF5B7886" FontFamily="Gill Sans MT" FontSize="14" FontWeight="Bold" Height="35"/>
            <TextBox x:Name="IDBox" Text="{Binding item.Id, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                     HorizontalAlignment="Left" Height="36" Margin="168,121,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="168" IsEnabled="False" TextAlignment="Left"/>
            <TextBox x:Name="NameBox" HorizontalAlignment="Left" Height="36" Margin="168,183,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="168">
                <TextBox.Text>
                    <Binding Path="ItemName" Mode="TwoWay" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validation:ItemNameValidation ValidationStep="RawProposedValue"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <StackPanel>
                            <AdornedElementPlaceholder x:Name="textBox"/>
                            <TextBlock Text="{Binding [0].ErrorContent}" Foreground="#FFE52020"/>
                        </StackPanel>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
            </TextBox>

            <ComboBox x:Name="comboBox" ItemsSource="{Binding Source={StaticResource dataFromEnum}}" 
                      SelectedItem="{Binding item.EquipmentType, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      HorizontalAlignment="Left" Height="35" Margin="168,312,0,0" VerticalAlignment="Top" Width="168">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Converter={StaticResource invConverter}}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Button x:Name="save" Content="Potvrdi" HorizontalAlignment="Left" Margin="88,426,0,0" VerticalAlignment="Top" 
                    Height="35" Width="90" Click="save_Click" Background="#adc5d0" Foreground="#FFF8F5EE" BorderBrush="#FFF8F5EE"
                    FontFamily="Gill Sans MT" FontSize="14">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="IsEnabled" Value="True"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=NameBox, Path=Text}" Value="">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=NameBox, Path=(Validation.HasError)}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=KolicinaBox, Path=Text}" Value="">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=KolicinaBox, Path=(Validation.HasError)}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=suppBox, Path=Text}" Value="">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=suppBox, Path=(Validation.HasError)}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=comboBox, Path=SelectedIndex}" Value="-1">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Button x:Name="cancel" Content="Otkaži" HorizontalAlignment="Left" Margin="214,426,0,0" VerticalAlignment="Top" Height="35" Width="88" Click="cancel_Click" Background="#adc5d0" Foreground="#FFF8F5EE" BorderBrush="#FFF8F5EE" FontFamily="Gill Sans MT" FontSize="14" RenderTransformOrigin="0.522,0.406"/>
            <TextBox x:Name="KolicinaBox" HorizontalAlignment="Left" Height="36" Margin="168,246,0,0" TextWrapping="Wrap" 
                     VerticalAlignment="Top" Width="168">
                <TextBox.Resources>
                    <validation:MinInventoryProxy x:Key="proxy" Data="{Binding}"/>
                </TextBox.Resources>
                <TextBox.Text>
                    <Binding Path="EnteredQuantity" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validation:EditQuantityValidation ValidationStep="RawProposedValue">
                                <validation:EditQuantityValidation.Wrapper>
                                    <validation:MinInventoryWrapper Min ="{Binding Path=Data.item.Quantity, Source={StaticResource proxy}}"/>
                                </validation:EditQuantityValidation.Wrapper>
                            </validation:EditQuantityValidation>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <StackPanel>
                            <AdornedElementPlaceholder x:Name="textBox"/>
                            <TextBlock Text="{Binding [0].ErrorContent}" Foreground="#FFE52020"/>
                        </StackPanel>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
            </TextBox>

            <TextBox x:Name="suppBox" HorizontalAlignment="Left" Height="34" Margin="168,367,0,0" TextWrapping="Wrap" VerticalAlignment="Top" 
                     Width="168">
                <TextBox.Text>
                    <Binding Path="Supplier" Mode="TwoWay" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validation:ItemNameValidation ValidationStep="RawProposedValue"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <StackPanel>
                            <AdornedElementPlaceholder x:Name="textBox"/>
                            <TextBlock Text="{Binding [0].ErrorContent}" Foreground="#FFE52020"/>
                        </StackPanel>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
            </TextBox>

            <TextBlock x:Name="textBlock" HorizontalAlignment="Left" Margin="34,61,0,0" Text="Izmeni stavku" TextWrapping="Wrap" VerticalAlignment="Top" Height="57" Width="302" FontFamily="Gill Sans MT" FontSize="36" FontStyle="Italic" TextAlignment="Center"/>
        </Grid>
        <Frame x:Name="newFrame" NavigationUIVisibility="Hidden"/>
    </Grid>
</Page>
